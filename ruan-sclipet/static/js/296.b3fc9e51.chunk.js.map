{"version":3,"file":"static/js/296.b3fc9e51.chunk.js","mappings":"0KAAaA,EAAa,SAACC,GACvB,OACIC,EAAAA,EAAAA,KAAA,OACIC,MAAO,CACHC,UAAW,SACXC,MAAO,UACPC,SAAU,OACVC,WAAY,MACZC,WAAY,SACZC,cAAe,IACfC,aAAc,OACdC,gBAAiB,WACnBC,SAEAX,EAAMW,UAGpB,C,8DCiBA,UA/BqB,SAACX,GAClB,IAAQY,EAASZ,EAATY,KACFC,GAAWC,EAAAA,EAAAA,KAEjB,OACIb,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAJ,UACIV,EAAAA,EAAAA,KAAA,KACIe,UAAWH,EAAW,cAAgB,GACtCI,KAAML,EACNM,KAAK,SACLhB,MAAO,CACHG,SAAU,OACVC,WAAY,MACZa,eAAgB,OAChBZ,WAAY,IACZH,MAAO,UACPgB,aAAc,MACdC,QAAS,YACTC,gBAAiB,6DACjBC,eAAgB,YAChBC,UAAW,OACXC,WAAY,WACZC,mBAAoB,aACtBf,SACL,2BAKb,C,yECQA,UArCoB,WAEhB,IAAAgB,EAA0BC,EAAAA,SAAe,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBhB,GAAWC,EAAAA,EAAAA,KAEXmB,EAAc,WAEhBpB,GAAYmB,EAASE,KAAKC,MAAmB,IAAbD,KAAKE,SAAyB,KAClE,EAQA,OANAR,EAAAA,WAAgB,WAEZ,IAAMS,EAAqBC,YAAYL,EAAa,KACpD,OAAO,kBAAMM,cAAcF,EAAoB,CACnD,KAGIG,EAAAA,EAAAA,MAAA,OACItC,MAAO,CACHC,UAAW,SACXC,MAAO,WACTO,SAAA,EAEF6B,EAAAA,EAAAA,MAAA,QACItC,MAAO,CACHI,WAAY,UACdK,SAAA,CACL,mBACYoB,EAAM,UACZ,6BAEP9B,EAAAA,EAAAA,KAAA,SAAK,4DAIjB,C,8GCnCawC,EAAS,WAClB,IAAMC,GAAOC,EAAAA,EAAAA,KAEb,OACI1C,EAAAA,EAAAA,KAAA,UAAAU,UACIV,EAAAA,EAAAA,KAACF,EAAAA,EAAU,CAAAY,UACP6B,EAAAA,EAAAA,MAAAzB,EAAAA,SAAA,CAAAJ,SAAA,CAC0B,yBACC+B,EAAK,wCAKhD,E,6ECbaE,EAAe,SAAC5C,GAIzB,IAAQ6C,EAAoB7C,EAApB6C,MAAOC,EAAa9C,EAAb8C,SACTjC,GAAWC,EAAAA,EAAAA,KAEjB,OACIb,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAJ,SAEQE,GACIZ,EAAAA,EAAAA,KAAA,UACI8C,MAAM,MACNC,OAAO,MACPC,IAAG,iCAAAC,OAAmCL,EAAK,oCAC3CM,MAAOL,EACPM,MAAM,2FACNC,iBAAe,EACfC,QAAQ,OACRpD,MAAO,CACHqD,SAAU,OACVC,OAAQ,UAIhBvD,EAAAA,EAAAA,KAAA,OACIgD,IAAKQ,EACLV,MAAM,MACNC,OAAO,MACPU,IAAI,OACJxD,MAAO,CACHqD,SAAU,OACVP,OAAQ,OACRQ,OAAQ,UAOpC,E,kBCmBA,EAvDkB,WACd,OACIhB,EAAAA,EAAAA,MAAAzB,EAAAA,SAAA,CAAAJ,SAAA,EACIV,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAAAhD,UACHV,EAAAA,EAAAA,KAAA,SAAAU,SAAO,qBAGXV,EAAAA,EAAAA,KAACwC,EAAM,KAEPD,EAAAA,EAAAA,MAAA,OACItC,MAAO,CACH0D,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,OACLrD,gBAAiB,UACjBY,gBAAgB,OAAD4B,OAASc,EAAQ,KAChCC,mBAAoB,aACpB1C,eAAgB,QAChBF,QAAS,OACT6C,cAAe,QACjBvD,SAAA,EAEFV,EAAAA,EAAAA,KAAA,OACIC,MAAO,CACHE,MAAO,UACPC,SAAU,OACVC,WAAY,MACZC,WAAY,KACdI,SACL,iEAIDV,EAAAA,EAAAA,KAACkE,EAAAA,QAAW,KAEZlE,EAAAA,EAAAA,KAAA,OACIC,MAAO,CACHO,aAAc,QAChBE,UAEFV,EAAAA,EAAAA,KAAC2C,EAAY,CACTC,MAAM,cACNC,SAAS,uBAIjB7C,EAAAA,EAAAA,KAACmE,EAAAA,QAAY,CACTxD,KAAK,2CAKzB,C,mGC1DaE,EAAsB,WAC/B,IAAAa,EAAsCC,EAAAA,UAAe,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApD0C,EAAWxC,EAAA,GAAEyC,EAAczC,EAAA,GAelC,OAbAD,EAAAA,iBAAsB,WAClB,IAAMf,EAAW,IAAI0D,gBACrB,CAAC,YAAa,YAAa,UAAW,SAAU,cAAcC,SAAS,SAAUC,GAC7EC,SAASC,iBAAiBF,GAAKG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9BtE,EAASuE,QACTd,GAAe,GAAM,wBAAAW,EAAAI,OAAA,GAAAN,EAAA,KACrB,CACAO,MAAM,EACNC,OAAQ1E,EAAS0E,QAEzB,GACJ,GAAG,IAEIlB,CACX,C,yFChBa1B,EAAc,WACvB,IAAAhB,EAAwBC,EAAAA,SAAe,iBAAaC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Ce,EAAIb,EAAA,GACLhB,GADcgB,EAAA,IACHf,EAAAA,EAAAA,MAmBjB,OAJAc,EAAAA,WAAgB,WACZ,GACD,CAACf,IAEG6B,CACX,C","sources":["components/InfoBanner.tsx","components/white-page/AccessButton.tsx","components/white-page/WatchingNow.tsx","components/white-page/Header.tsx","components/YouTubeVideo.tsx","components/white-page/WhitePage.tsx","hooks/useFirstInteraction.tsx","hooks/useIPLocale.tsx"],"sourcesContent":["export const InfoBanner = (props: React.PropsWithChildren) => {\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n                color: \"#FFFFFF\",\n                fontSize: \"15px\",\n                fontWeight: \"700\",\n                lineHeight: \"1.2rem\",\n                letterSpacing: \"0\",\n                paddingBlock: \"10px\",\n                backgroundColor: \"#DD0000\"\n            }}\n        >\n            { props.children }\n        </div>\n    );\n}","import { useFirstInteraction } from \"../../hooks/useFirstInteraction\";\nimport \"./animation.css\";\n\nconst AccessButton = (props: {link: string}) => {\n    const { link } = props;\n    const interact = useFirstInteraction();\n\n    return (\n        <>\n            <a\n                className={interact ? \"pulsate-fwd\" : \"\"}\n                href={link}\n                role=\"button\"\n                style={{\n                    fontSize: \"18px\",\n                    fontWeight: \"700\",\n                    textDecoration: \"none\",\n                    lineHeight: \"1\",\n                    color: \"#FFFFFF\",\n                    borderRadius: \"8px\",\n                    padding: \"18px 3rem\",\n                    backgroundImage: \"linear-gradient(45deg, #00ff52, #00b823, #00ff52, #00b823)\",\n                    backgroundSize: \"400% 200%\",\n                    boxShadow: \"none\",\n                    transition: \"all 0.3s\",\n                    transitionProperty: \"transform\"\n                }}\n            >\n                QUERO TER MEU ACESSO!\n            </a>\n        </>\n    )\n}\n\nexport default AccessButton;","import React from \"react\"\nimport { useFirstInteraction } from \"../../hooks/useFirstInteraction\";\n\nconst WatchingNow = () => {\n    //  people watching now\n    const [count, setCount] = React.useState(674);\n    const interact = useFirstInteraction();\n\n    const updateCount = () => {\n        // set some random count\n        interact && setCount(Math.floor(Math.random() * (697 - 553) + 553));\n    }\n\n    React.useEffect(() => {\n        // update count after every 2 seconds\n        const countUpdatInterval = setInterval(updateCount, 2000);\n        return () => clearInterval(countUpdatInterval);\n    });\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n                color: \"#FFFFFF\"\n            }}\n        >\n            <span\n                style={{\n                    fontWeight: \"bolder\"\n                }}\n            >\n                üü¢&nbsp;{count}&nbsp;\n            </span>\n            pessoas assistindo agora!\n            <br/>\n            üîä Verifique que seu som esteja ligado\n        ‚Äã</div>\n    );\n}\n\nexport default WatchingNow;","import { useIPLocale } from \"../../hooks/useIPLocale\";\nimport { InfoBanner } from \"../InfoBanner\";\n\nexport const Header = () => {\n    const city = useIPLocale();\n\n    return (\n        <header>\n            <InfoBanner>\n                <>\n                    {/* header message */}\n                    SOMENTE AS PESSOAS DE {city} TIVERAM ACESSO A ESSE V√çDEO\n                </>\n            </InfoBanner>\n        </header>\n    );\n}","import { useFirstInteraction } from \"../hooks/useFirstInteraction\";\nimport lazy from \"../assets/images/IMAGEM-05.webp\";\n\nexport const YouTubeVideo = (props: {\n    vidId: string,\n    vidTitle: string\n}) => {\n    const { vidId, vidTitle } = props;\n    const interact = useFirstInteraction();\n\n    return (\n        <>\n            {\n                interact ? (\n                    <iframe\n                        width=\"640\"\n                        height=\"360\"\n                        src={`https://www.youtube.com/embed/${vidId}?autoplay=1&mute=1&enablejsapi=1`}\n                        title={vidTitle}\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        loading=\"lazy\"\n                        style={{\n                            maxWidth: \"100%\",\n                            border: \"0px\"\n                        }}\n                    ></iframe>\n                ) : (\n                    <img\n                        src={lazy}\n                        width=\"640\"\n                        height=\"360\"\n                        alt=\"paly\"\n                        style={{\n                            maxWidth: \"100%\",\n                            height: \"auto\",\n                            border: \"0px\"\n                        }}\n                    />\n                )\n            }\n        </>\n    )\n}","import { Helmet } from \"react-helmet\";\nimport { Header } from \"./Header\"\nimport WatchingNow from \"./WatchingNow\";\nimport { YouTubeVideo } from \"../YouTubeVideo\";\nimport AccessButton from \"./AccessButton\";\nimport bg1mines from \"../../assets/images/BG1-Mines.webp\";\n\nconst WhitePage = () => {\n    return (\n        <>\n            <Helmet>\n                <title>sitepagafacil</title>\n            </Helmet>\n\n            <Header />\n\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    gap: \"20px\",\n                    backgroundColor: \"#000000\",\n                    backgroundImage: `url(${bg1mines})`,\n                    backgroundPosition: \"top center\",\n                    backgroundSize: \"cover\",\n                    padding: \"20px\",\n                    paddingBottom: \"80px\"\n                }}\n            >\n                <div\n                    style={{\n                        color: \"#FFFFFF\",\n                        fontSize: \"18px\",\n                        fontWeight: \"700\",\n                        lineHeight: \"1\"\n                    }}\n                >\n                    Boas vindas, clique no v√≠deo abaixo e comece a assistir!\n                </div>\n\n                <WatchingNow />\n                \n                <div\n                    style={{\n                        paddingBlock: \"30px\"\n                    }}\n                >\n                    <YouTubeVideo\n                        vidId=\"9SdyUB4jM8A\"\n                        vidTitle=\"[BOT VIP] Mines\"\n                    />\n                </div>\n\n                <AccessButton\n                    link=\"https://pay.kiwify.com.br/Z7u8BVj\"\n                />\n            </div>\n        </>\n    );\n}\n\nexport default WhitePage;","import React from \"react\";\n\nexport const useFirstInteraction = () => {\n    const [interaction, setInteraction] = React.useState(false);\n\n    React.useLayoutEffect(() => {\n        const interact = new AbortController();\n        [\"mousedown\", \"mousemove\", \"keydown\", \"scroll\", \"touchstart\"].forEach((function (event) {\n            document.addEventListener(event, (async () => {\n                interact.abort();\n                setInteraction(true);\n            }), {\n                once: true,\n                signal: interact.signal\n            });\n        }));\n    }, []);\n\n    return interaction;\n}","import React from \"react\";\nimport { useFirstInteraction } from \"./useFirstInteraction\";\n\nexport const useIPLocale = () => {\n    const [city, setCity] = React.useState(\"SUA REGI√ÉO\");\n    const interact = useFirstInteraction();\n\n    const updateCity = () => {\n        // get user's city name from IP address\n        // -- change token to your own token --\n        fetch(\"https://ipinfo.io/json?token=dbe6ec9d28323c\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then((response) => response.json())\n            .then((data) => setCity(data.city.toUpperCase()));\n    }\n\n    React.useEffect(() => {\n        // interact && updateCity();\n    }, [interact]);\n\n    return city;\n}"],"names":["InfoBanner","props","_jsx","style","textAlign","color","fontSize","fontWeight","lineHeight","letterSpacing","paddingBlock","backgroundColor","children","link","interact","useFirstInteraction","_Fragment","className","href","role","textDecoration","borderRadius","padding","backgroundImage","backgroundSize","boxShadow","transition","transitionProperty","_React$useState","React","_React$useState2","_slicedToArray","count","setCount","updateCount","Math","floor","random","countUpdatInterval","setInterval","clearInterval","_jsxs","Header","city","useIPLocale","YouTubeVideo","vidId","vidTitle","width","height","src","concat","title","allow","allowFullScreen","loading","maxWidth","border","lazy","alt","Helmet","display","flexDirection","alignItems","gap","bg1mines","backgroundPosition","paddingBottom","WatchingNow","AccessButton","interaction","setInteraction","AbortController","forEach","event","document","addEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abort","stop","once","signal"],"sourceRoot":""}